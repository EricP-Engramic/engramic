[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "engramic"
dynamic = ["version"]
description = 'An open source (for companies less than 250 employees) AI library for processing, storing, and retrieving proprietary, unstructured data.'
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Engramic Community License" }
license-files = { paths = ["LICENSE.txt"] }
keywords = ["AI", "LLM", "RAG", "Retrieval Augmented Generation", "Memory"]
authors = [
  { name = "Preisz Consulting, LLC", email = "license@engramic.org" }
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["pluggy","mako","tomli","pyzmq","cachetools","websockets"]

[tool.hatch.envs.dev]
template = "default"
dependencies = ["pre-commit"]

[tool.hatch.envs.dev.scripts]
post-install = "pre-commit install"
web_server = "python -m http.server 8000 --directory ./web/"

[project.urls]
Documentation = "https://github.com/engramic/engramic#readme"
Issues = "https://github.com/engramic/engramic/issues"
Source = "https://github.com/engramic/engramic"

[tool.hatch.version]
path = "src/engramic/__about__.py"

[tool.hatch.envs.test]
template = "dev"
dependencies = ["pytest","pytest-asyncio","mypy"]

[tool.hatch.envs.test.scripts]
typecheck = "mypy --ignore-missing-imports ."

[tool.hatch.envs.hatch-test]
extra-dependencies = ["engramic","pytest-asyncio"]

[tool.hatch.envs.docs]
template = "default"
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings[python]",
  "pylint"
]

[tool.hatch.envs.docs.scripts]
"build" = "mkdocs build"
"serve" = "mkdocs serve -a 0.0.0.0:8000"
"generate_uml" = "pyreverse -o pdf -p my_project ."

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.9", "3.10","3.11","3.12","3.13"]

[tool.coverage.run]
source_pkgs = ["engramic", "tests"]
branch = true
parallel = true
omit = [
  "src/engramic/__about__.py",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.paths]
engramic = ["src/engramic", "*/engramic/src/engramic"]
tests = ["tests", "*/engramic/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
omit = ["*/__init__.py"]



[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint]
preview = true
extend-select = ["C901"]
ignore = ["PLC0414","RET504","PLR6301"] 

#ignores
#PLC0414 - redundant "as" in init files
#RET504 -allowing assignments before a return
#PLR6301 - not using self in a method. Should add back later.

[tool.ruff.lint.extend-per-file-ignores]
"docs/.hooks/*" = ["INP001", "T201"]

[tool.ruff.lint.isort]
known-first-party = ["foo", "bar"]